name: Gating

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs: {}

env:
  IMAGE_NAME: cachi2
  IMAGE_REGISTRY: quay.io
  IMAGE_NAMESPACE: containerbuildsystem
  IMAGE_TAG: latest
  TEST_REPO: https://github.com/release-engineering/retrodep.git
  TEST_BRANCH: v2.1.1
  TEST_FOLDER: /tmp/source

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.9"]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install required packages
      run: |
        sudo apt-get install -y \
          libkrb5-dev
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test with tox
      run: tox
    - name: Run coveralls-python
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: python-${{ matrix.python-version }}
        COVERALLS_PARALLEL: true
      run: |
        pip3 install --upgrade pip
        pip3 install --upgrade setuptools
        pip3 install --upgrade coveralls==3.2.0
        coveralls --service=github

  coveralls-finish:
    name: Finish coveralls-python
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade pip
          pip3 install --upgrade setuptools
          pip3 install --upgrade coveralls
          coveralls --finish --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linters:
    name: Linters
    strategy:
      matrix:
        tox_env:
          - bandit
          - black
          - isort
          - flake8
          - mypy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install required packages
      run: |
        sudo apt-get install -y \
          libkrb5-dev
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Test '${{ matrix.tox_env }}' with tox
      run: tox -e ${{ matrix.tox_env }}

  hadolint:
    name: Hadolint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: hadolint/hadolint-action@v1.5.0
      with:
        dockerfile: Containerfile
        # Ignore list:
        # * DL3041 - Specify version with dnf install -y <package>-<version>
        ignore: DL3041
        failure-threshold: warning

  build-image:
    name: Build Cachi2 image and run smoketest on it
    runs-on: ubuntu-latest
    steps:
      - name: add checkout action...
        uses: actions/checkout@v3

      - name: Build Cachi2 image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ github.sha }}
          arch: amd64
          containerfiles: |
            ./Containerfile

      - name: Check images created
        run: buildah images | grep '${{ env.IMAGE_NAME }}'

      - name: Run smoketest on built images
        run: |
          git clone -b ${{ env.TEST_BRANCH }} ${{ env.TEST_REPO }} ${{ env.TEST_FOLDER }}
          podman run -t -v ${{ env.TEST_FOLDER }}:${{ env.TEST_FOLDER }} \
            ${{ env.IMAGE_NAME }}:${{ github.sha }} \
            fetch-deps \
            --source ${{ env.TEST_FOLDER }} \
            --output ./cachi2-output \
            --package '{"path": ".", "type": "gomod"}'

     # Authenticate to container image registry to push the image
      - name: Podman Login
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PWD }}

      - name: Push image to Quay.io registry
        run: |
          podman push ${{ env.IMAGE_NAME }}:${{ github.sha }} \
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
